name: AvicaRDP
on:
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *'  # Auto-restart every 6 hours

jobs:
  build:
    name: Setup and Share Avica RDP
    runs-on: windows-latest
    timeout-minutes: 350

    steps:
      # --- Step 1: Download files ---
      - name: Download Required Files
        run: |
          Write-Host "🚀 Downloading files..." -ForegroundColor Green
          $files = @(
              "https://gitlab.com/userup908/my-rdp/-/raw/main/setup.py",
              "https://download.avica.com/AvicaLite_v8.0.8.9.exe",
              "https://gitlab.com/userup908/my-rdp/-/raw/main/show.bat",
              "https://gitlab.com/userup908/my-rdp/-/raw/main/loop.bat"
          )
          foreach ($url in $files) {
              $fileName = Split-Path -Leaf $url
              Invoke-WebRequest -Uri $url -OutFile $fileName
              if (-not (Test-Path $fileName)) { throw "Failed to download $fileName" }
          }

      # --- Step 2: Install Python packages ---
      - name: Install Dependencies
        run: |
          python.exe -m pip install requests pyautogui telegraph --quiet
          if ($LASTEXITCODE -ne 0) { throw "Failed to install Python packages" }

      # --- Step 3: Configure RDP and credentials ---
      - name: Setup RDP
        run: |
          # Enable RDP
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"

          # Set user password (from GitHub Secrets)
          net user runneradmin "${{ secrets.RDP_PASSWORD }}"
          if ($LASTEXITCODE -ne 0) { throw "Failed to set user password" }

      # --- Step 4: Run Avica setup ---
      - name: Execute Avica Setup
        run: |
          Write-Host "⚡ Starting Avica..." -ForegroundColor Yellow
          Start-Process "Avica_setup.exe" -Wait
          python setup.py
          if ($LASTEXITCODE -ne 0) { throw "Avica setup failed" }

      # --- Step 5: Upload credentials to GoFile ---
      - name: Upload to GoFile
        id: gofile
        run: |
          # Check if credentials file exists (generated by setup.py)
          if (-not (Test-Path "credentials.txt")) { throw "No credentials file found" }

          # Upload to GoFile (replace with your API token)
          $apiToken = "${{ secrets.GOFILE_API_TOKEN }}"
          $server = (Invoke-RestMethod -Uri "https://api.gofile.io/getServer" -Method GET).data.server
          $upload = curl -F "file=@credentials.txt" -F "token=$apiToken" "https://$server.gofile.io/uploadFile"
          $downloadUrl = $upload.data.downloadPage

          # Set output for logs
          echo "downloadUrl=$downloadUrl" >> $env:GITHUB_OUTPUT
          Write-Host "🔗 GoFile Link: $downloadUrl"

      # --- Step 6: Print connection info ---
      - name: Display Connection Info
        run: |
          Write-Host @"
          ╔══════════════════════════════════════╗
          ║        AVICA RDP CONNECTION          ║  
          ╚══════════════════════════════════════╝
          
          📱 Telegram: @TheNetworkZoneOfficial
          👨‍💻 Credits: @PiroYadav & @TheYadavNetwork
          
          📋 Instructions:
          1. Download credentials: ${{ steps.gofile.outputs.downloadUrl }}
          2. Use Avica app to connect.
          
          ⚠️ Link expires after 10 days (free GoFile).
          "@ -ForegroundColor Cyan

      # --- Step 7: Start Avica service ---
      - name: Start Avica Service
        run: cmd /c show.bat

      # --- Step 8: Cleanup ---
      - name: Delete Local Credentials
        run: |
          Remove-Item -Path "credentials.txt" -Force -ErrorAction SilentlyContinue
          Write-Host "🔒 Local credentials deleted."
