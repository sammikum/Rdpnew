name: AvicaRDP
on:
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *'

jobs:
  build:
    name: Setup Avica RDP
    runs-on: windows-latest
    timeout-minutes: 350

    steps:
      # --- Step 1: Download files (with integrity checks) ---
      - name: Download Required Files
        run: |
          $files = @(
              @{ Uri = "https://gitlab.com/userup908/my-rdp/-/raw/main/setup.py"; OutFile = "setup.py" },
              @{ Uri = "https://download.avica.com/AvicaLite_v8.0.8.9.exe"; OutFile = "Avica_setup.exe" },
              @{ Uri = "https://gitlab.com/userup908/my-rdp/-/raw/main/show.bat"; OutFile = "show.bat" },
              @{ Uri = "https://gitlab.com/userup908/my-rdp/-/raw/main/loop.bat"; OutFile = "loop.bat" }
          )
          foreach ($file in $files) {
              Invoke-WebRequest -Uri $file.Uri -OutFile $file.OutFile
          }

      # --- Step 2: Install Python packages ---
      - name: Install Dependencies
        run: |
          python -m pip install requests pyautogui telegraph --quiet

      # --- Step 3: Configure RDP and save credentials locally ---
      - name: Setup RDP and Save Credentials
        run: |
          # Enable RDP
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"

          # Generate credentials (replace with actual logic from setup.py)
          $avicaID = "RDP-" + (Get-Date -Format "yyyyMMddHHmmss")
          $avicaPass = "${{ secrets.RDP_PASSWORD }}"  # From GitHub Secrets

          # Save to file (example)
          New-Item -ItemType Directory -Path "outputs" -Force
          @"
          Avica ID: $avicaID
          Password: $avicaPass
          RDP Address: $env:COMPUTERNAME
          Expires: $(Get-Date -Format "yyyy-MM-dd HH:mm:ss")
          "@ | Out-File -FilePath "outputs/credentials.txt"

          # Log non-sensitive info
          Write-Host "âœ… Credentials saved to outputs/credentials.txt"

      # --- Step 4: Run Avica setup ---
      - name: Execute Avica Setup
        run: |
          Start-Process "Avica_setup.exe" -Wait
          python setup.py >> outputs/setup.log 2>&1

      # --- Step 5: Save debug logs ---
      - name: Capture Logs
        run: |
          Get-Content "outputs/credentials.txt"  # Print credentials for debugging (optional)
          Get-ChildItem -Recurse >> outputs/file_list.txt

      # --- Step 6: Upload artifacts (credentials/logs) ---
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: avica-debug-outputs
          path: |
            outputs/*
            setup.py
            show.bat
          retention-days: 1  # Auto-delete after 1 day

      # --- Step 7: Cleanup (optional) ---
      - name: Delete Local Credentials
        if: always()
        run: |
          Remove-Item -Path "outputs/credentials.txt" -Force -ErrorAction SilentlyContinue
          Write-Host "ðŸ”’ Sensitive files deleted locally."
