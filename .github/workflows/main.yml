name: AvicaRDP
on:
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *'  # Auto restart every 6 hours

jobs:
  build:
    name: Start Building...
    runs-on: windows-latest
    timeout-minutes: 350  # Increased time limit
    
    steps:
      - name: Direct Avica Setup
        run: |
          Write-Host "🚀 Starting Avica setup directly..." -ForegroundColor Green
          
          # Download files directly
          Invoke-WebRequest -Uri "https://gitlab.com/userup908/my-rdp/-/raw/main/setup.py" -OutFile "setup.py"
          Invoke-WebRequest -Uri "https://download.avica.com/AvicaLite_v8.0.8.9.exe" -OutFile "Avica_setup.exe"
          Invoke-WebRequest -Uri "https://gitlab.com/userup908/my-rdp/-/raw/main/show.bat" -OutFile "show.bat"
          Invoke-WebRequest -Uri "https://gitlab.com/userup908/my-rdp/-/raw/main/loop.bat" -OutFile "loop.bat"
          
          # Install Python packages
          python.exe -m pip install requests pyautogui telegraph --quiet
          
          # Enable RDP (no password setup needed)
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
          
          # Start Avica
          Write-Host "⚡ Starting Avica..." -ForegroundColor Yellow
          Start-Process "Avica_setup.exe" -Wait
          
          # Run setup script
          python setup.py
          
          Write-Host "✅ Setup completed! Uploading to GoFile..." -ForegroundColor Green
          
      - name: Upload Credentials to GoFile
        id: gofile_upload
        run: |
          # Check if credentials file exists (assuming setup.py creates it)
          if (Test-Path "credentials.txt") {
            # Get GoFile server
            $serverResponse = Invoke-RestMethod -Uri "https://api.gofile.io/getServer" -Method GET
            $server = $serverResponse.data.server
            
            # Upload file to GoFile
            $uploadResponse = curl -F "file=@credentials.txt" "https://$server.gofile.io/uploadFile"
            $downloadUrl = $uploadResponse.data.downloadPage
            
            # Set output for next steps
            echo "downloadUrl=$downloadUrl" >> $env:GITHUB_OUTPUT
            Write-Host "✅ GoFile upload successful!"
          } else {
            Write-Host "❌ credentials.txt not found - checking for other credential files..."
            # Look for other possible credential files
            Get-ChildItem -Filter "*credential*" -File
            Get-ChildItem -Filter "*password*" -File
            Get-ChildItem -Filter "*auth*" -File
          }
          
      - name: Display GoFile Link
        run: |
          Write-Host "
          ╔══════════════════════════════════════╗
          ║        AVICA RDP CONNECTION          ║  
          ╚══════════════════════════════════════╝
          
          📱 Telegram : @TheNetworkZoneOfficial
          👨‍💻 Credits : @PiroYadav & @TheYadavNetwork
          
          📋 Instructions:
          • Go to the GoFile link below
          • Get Avica ID and Password from there
          • Download Avica app and connect
          
          🔗 GoFile Link: ${{ steps.gofile_upload.outputs.downloadUrl }}
          
          ⚠️  This link will expire after some time!
          " -ForegroundColor Cyan
          
      - name: Cleanup Sensitive Files
        run: |
          # Remove any credential files
          Remove-Item -Path "credentials.txt" -ErrorAction SilentlyContinue
          Remove-Item -Path "*password*" -ErrorAction SilentlyContinue
          Remove-Item -Path "*credential*" -ErrorAction SilentlyContinue
          Remove-Item -Path "*auth*" -ErrorAction SilentlyContinue
          Write-Host "🧹 Cleaned up sensitive files" -ForegroundColor Green
          
      - name: Start Avica Service
        run: cmd /c show.bat
        
      - name: Keep Session Active
        run: |
          Write-Host "🚀 Avica is starting... Connection ready at GoFile link above!" -ForegroundColor Yellow
          cmd /c loop.bat
